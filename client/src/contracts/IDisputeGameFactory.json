{
  "contractName": "IDisputeGameFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "disputeProxy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "GameType",
          "name": "gameType",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "Claim",
          "name": "rootClaim",
          "type": "bytes32"
        }
      ],
      "name": "DisputeGameCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "impl",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "GameType",
          "name": "gameType",
          "type": "uint8"
        }
      ],
      "name": "ImplementationSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "gameCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_gameCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "GameType",
          "name": "gameType",
          "type": "uint8"
        },
        {
          "internalType": "Claim",
          "name": "rootClaim",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "games",
      "outputs": [
        {
          "internalType": "contract IDisputeGame",
          "name": "_proxy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "gameAtIndex",
      "outputs": [
        {
          "internalType": "contract IDisputeGame",
          "name": "_proxy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "GameType",
          "name": "gameType",
          "type": "uint8"
        }
      ],
      "name": "gameImpls",
      "outputs": [
        {
          "internalType": "contract IDisputeGame",
          "name": "_impl",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "GameType",
          "name": "gameType",
          "type": "uint8"
        },
        {
          "internalType": "Claim",
          "name": "rootClaim",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "contract IDisputeGame",
          "name": "proxy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "GameType",
          "name": "gameType",
          "type": "uint8"
        },
        {
          "internalType": "contract IDisputeGame",
          "name": "impl",
          "type": "address"
        }
      ],
      "name": "setImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "GameType",
          "name": "gameType",
          "type": "uint8"
        },
        {
          "internalType": "Claim",
          "name": "rootClaim",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "getGameUUID",
      "outputs": [
        {
          "internalType": "Hash",
          "name": "_uuid",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputeProxy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"GameType\",\"name\":\"gameType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"Claim\",\"name\":\"rootClaim\",\"type\":\"bytes32\"}],\"name\":\"DisputeGameCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"GameType\",\"name\":\"gameType\",\"type\":\"uint8\"}],\"name\":\"ImplementationSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"GameType\",\"name\":\"gameType\",\"type\":\"uint8\"},{\"internalType\":\"Claim\",\"name\":\"rootClaim\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"contract IDisputeGame\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"gameAtIndex\",\"outputs\":[{\"internalType\":\"contract IDisputeGame\",\"name\":\"_proxy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_gameCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"GameType\",\"name\":\"gameType\",\"type\":\"uint8\"}],\"name\":\"gameImpls\",\"outputs\":[{\"internalType\":\"contract IDisputeGame\",\"name\":\"_impl\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"GameType\",\"name\":\"gameType\",\"type\":\"uint8\"},{\"internalType\":\"Claim\",\"name\":\"rootClaim\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"games\",\"outputs\":[{\"internalType\":\"contract IDisputeGame\",\"name\":\"_proxy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"GameType\",\"name\":\"gameType\",\"type\":\"uint8\"},{\"internalType\":\"Claim\",\"name\":\"rootClaim\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"getGameUUID\",\"outputs\":[{\"internalType\":\"Hash\",\"name\":\"_uuid\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"GameType\",\"name\":\"gameType\",\"type\":\"uint8\"},{\"internalType\":\"contract IDisputeGame\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"setImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DisputeGameCreated(address,uint8,bytes32)\":{\"params\":{\"disputeProxy\":\"The address of the dispute game proxy\",\"gameType\":\"The type of the dispute game proxy's implementation\",\"rootClaim\":\"The root claim of the dispute game\"}},\"ImplementationSet(address,uint8)\":{\"params\":{\"gameType\":\"The type of the DisputeGame.\",\"impl\":\"The implementation contract for the given `GameType`.\"}}},\"kind\":\"dev\",\"methods\":{\"create(uint8,bytes32,bytes)\":{\"params\":{\"extraData\":\"Any extra data that should be provided to the created dispute game.\",\"gameType\":\"The type of the DisputeGame - used to decide the proxy implementation.\",\"rootClaim\":\"The root claim of the DisputeGame.\"},\"returns\":{\"proxy\":\"The address of the created DisputeGame proxy.\"}},\"gameAtIndex(uint256)\":{\"params\":{\"_index\":\"The index of the dispute game.\"},\"returns\":{\"_proxy\":\"The clone of the `DisputeGame` created with the given parameters.         Returns `address(0)` if nonexistent.\",\"_timestamp\":\"The timestamp of the creation of the dispute game.\"}},\"gameCount()\":{\"returns\":{\"_gameCount\":\"The total number of dispute games created by this factory.\"}},\"gameImpls(uint8)\":{\"params\":{\"gameType\":\"The type of the dispute game.\"},\"returns\":{\"_impl\":\"The address of the implementation of the game type.         Will be cloned on creation of a new dispute game with the given `gameType`.\"}},\"games(uint8,bytes32,bytes)\":{\"details\":\"`++` equates to concatenation.\",\"params\":{\"extraData\":\"Any extra data that should be provided to the created dispute game.\",\"gameType\":\"The type of the DisputeGame - used to decide the proxy implementation\",\"rootClaim\":\"The root claim of the DisputeGame.\"},\"returns\":{\"_proxy\":\"The clone of the `DisputeGame` created with the given parameters.         Returns `address(0)` if nonexistent.\",\"_timestamp\":\"The timestamp of the creation of the dispute game.\"}},\"getGameUUID(uint8,bytes32,bytes)\":{\"details\":\"Hashes the concatenation of `gameType . rootClaim . extraData`      without expanding memory.\",\"params\":{\"extraData\":\"Any extra data that should be provided to the created dispute game.\",\"gameType\":\"The type of the DisputeGame.\",\"rootClaim\":\"The root claim of the DisputeGame.\"},\"returns\":{\"_uuid\":\"The unique identifier for the given dispute game parameters.\"}},\"setImplementation(uint8,address)\":{\"details\":\"May only be called by the `owner`.\",\"params\":{\"gameType\":\"The type of the DisputeGame.\",\"impl\":\"The implementation contract for the given `GameType`.\"}}},\"title\":\"IDisputeGameFactory\",\"version\":1},\"userdoc\":{\"events\":{\"DisputeGameCreated(address,uint8,bytes32)\":{\"notice\":\"Emitted when a new dispute game is created\"},\"ImplementationSet(address,uint8)\":{\"notice\":\"Emitted when a new game implementation added to the factory\"}},\"kind\":\"user\",\"methods\":{\"create(uint8,bytes32,bytes)\":{\"notice\":\"Creates a new DisputeGame proxy contract.\"},\"gameAtIndex(uint256)\":{\"notice\":\"`gameAtIndex` returns the dispute game contract address and its creation timestamp          at the given index. Each created dispute game increments the underlying index.\"},\"gameCount()\":{\"notice\":\"The total number of dispute games created by this factory.\"},\"gameImpls(uint8)\":{\"notice\":\"`gameImpls` is a mapping that maps `GameType`s to their respective         `IDisputeGame` implementations.\"},\"games(uint8,bytes32,bytes)\":{\"notice\":\"`games` queries an internal mapping that maps the hash of         `gameType ++ rootClaim ++ extraData` to the deployed `DisputeGame` clone.\"},\"getGameUUID(uint8,bytes32,bytes)\":{\"notice\":\"Returns a unique identifier for the given dispute game parameters.\"},\"setImplementation(uint8,address)\":{\"notice\":\"Sets the implementation contract for a specific `GameType`.\"}},\"notice\":\"The interface for a DisputeGameFactory contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/src/dispute/interfaces/IDisputeGameFactory.sol\":\"IDisputeGameFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/src/dispute/interfaces/IBondManager.sol\":{\"keccak256\":\"0x431c4c0fff71b1f94a9c649415cf398466e0a3f2ce64468df5af96bab261e7ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a9dcb5246077b9cccb1916b637b9605e85d9c0f8bd7f87a086be3b4051bfaba\",\"dweb:/ipfs/QmcsnoAjvUiBGndBrs6xvWDxtDLeoQUBjZU5RUUtTf8rFF\"]},\"@eth-optimism/contracts-bedrock/src/dispute/interfaces/IDisputeGame.sol\":{\"keccak256\":\"0xc40099967c0bd485d5204b60479f0d789a9e053b8d11a97a267d3f9e674d002b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a190213b5a63ea418f030ba914599b8a342c062358b8aa8e63f29b821454294\",\"dweb:/ipfs/QmfT4nfmLwg2QyubbFv5X1ghVPgqag87gGVMYpXoBYp3mQ\"]},\"@eth-optimism/contracts-bedrock/src/dispute/interfaces/IDisputeGameFactory.sol\":{\"keccak256\":\"0x5bbd87b0af63aab392081d4700e4657d9cbeb86d8f69c60b0e202bce070d68f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a5151d88a3dfee3ebe850756721151f3bbcd20c4802ca30dc0c7ec8ce3247ca\",\"dweb:/ipfs/QmeyWYeoaWLoZkWwwrjQsdAp8KgLVttmBARsaLF82FEPq3\"]},\"@eth-optimism/contracts-bedrock/src/dispute/interfaces/IInitializable.sol\":{\"keccak256\":\"0xf021b03c9e887e227102b037595e0917b76546e796bec7aa4fdced61090267ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcfbad382815e37355b7cc318fa333b9b5b08223d4315951fd0881430ab8d3df\",\"dweb:/ipfs/QmRng31WWpYeApQUcXJXhSdqL797drdtBwvUD6D9giCyy2\"]},\"@eth-optimism/contracts-bedrock/src/dispute/lib/LibClock.sol\":{\"keccak256\":\"0xa5e0ab5658506760ac26d6b73755af9c03e43184dee996e40113dbaa71199551\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1305bffdb301d190ce749d67274f6caac24002846e506f28d950f8cbc230e8c0\",\"dweb:/ipfs/QmdG6DAX2nznmwyp4VmTNxHy7orx6sdGzUKwgJ9kB69Epm\"]},\"@eth-optimism/contracts-bedrock/src/dispute/lib/LibHashing.sol\":{\"keccak256\":\"0xc0174b32e6585e7192d385b405c3825528150f9fc941a4f14448edaa662e042c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cae57fb5cb98d7b4b96cd60779920122e800d0d7db9415f16808e19175e45f89\",\"dweb:/ipfs/QmRZfqzW7Aa5FtfL5d16UdjD53q95w1VeVDkeGsnTJusrE\"]},\"@eth-optimism/contracts-bedrock/src/dispute/lib/LibPosition.sol\":{\"keccak256\":\"0x1836d08aaf755a6afea8a4d6bc92b8b96061c7df681a7308a536114ec3cd9276\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd7a4e1cfdf656f32f5959e78a79872be90c9d5f089f1b0c56595b929d030ecc\",\"dweb:/ipfs/QmZsLmahruxKVRxpMXbnqeVonLwcaiuqHEXK1dXfx2YCZk\"]},\"@eth-optimism/contracts-bedrock/src/libraries/DisputeTypes.sol\":{\"keccak256\":\"0x11ba4465bbe25641801a34aef36fc6fd754afcf8811f1a5c2275d1a3f4567a9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeb9fb8f3e78ca4a02952a15b8163d298298c315bf61ade3e3198068c25351b9\",\"dweb:/ipfs/QmRBBtVzEXY66UcSjonGiP1RZ32KmugDjgXexu5sswe7sh\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.15;\n\nimport \"../../libraries/DisputeTypes.sol\";\n\nimport { IDisputeGame } from \"./IDisputeGame.sol\";\n\n/// @title IDisputeGameFactory\n/// @notice The interface for a DisputeGameFactory contract.\ninterface IDisputeGameFactory {\n    /// @notice Emitted when a new dispute game is created\n    /// @param disputeProxy The address of the dispute game proxy\n    /// @param gameType The type of the dispute game proxy's implementation\n    /// @param rootClaim The root claim of the dispute game\n    event DisputeGameCreated(\n        address indexed disputeProxy,\n        GameType indexed gameType,\n        Claim indexed rootClaim\n    );\n\n    /// @notice Emitted when a new game implementation added to the factory\n    /// @param impl The implementation contract for the given `GameType`.\n    /// @param gameType The type of the DisputeGame.\n    event ImplementationSet(address indexed impl, GameType indexed gameType);\n\n    /// @notice The total number of dispute games created by this factory.\n    /// @return _gameCount The total number of dispute games created by this factory.\n    function gameCount() external view returns (uint256 _gameCount);\n\n    /// @notice `games` queries an internal mapping that maps the hash of\n    ///         `gameType ++ rootClaim ++ extraData` to the deployed `DisputeGame` clone.\n    /// @dev `++` equates to concatenation.\n    /// @param gameType The type of the DisputeGame - used to decide the proxy implementation\n    /// @param rootClaim The root claim of the DisputeGame.\n    /// @param extraData Any extra data that should be provided to the created dispute game.\n    /// @return _proxy The clone of the `DisputeGame` created with the given parameters.\n    ///         Returns `address(0)` if nonexistent.\n    /// @return _timestamp The timestamp of the creation of the dispute game.\n    function games(\n        GameType gameType,\n        Claim rootClaim,\n        bytes calldata extraData\n    ) external view returns (IDisputeGame _proxy, uint256 _timestamp);\n\n    /// @notice `gameAtIndex` returns the dispute game contract address and its creation timestamp\n    ///          at the given index. Each created dispute game increments the underlying index.\n    /// @param _index The index of the dispute game.\n    /// @return _proxy The clone of the `DisputeGame` created with the given parameters.\n    ///         Returns `address(0)` if nonexistent.\n    /// @return _timestamp The timestamp of the creation of the dispute game.\n    function gameAtIndex(uint256 _index)\n        external\n        view\n        returns (IDisputeGame _proxy, uint256 _timestamp);\n\n    /// @notice `gameImpls` is a mapping that maps `GameType`s to their respective\n    ///         `IDisputeGame` implementations.\n    /// @param gameType The type of the dispute game.\n    /// @return _impl The address of the implementation of the game type.\n    ///         Will be cloned on creation of a new dispute game with the given `gameType`.\n    function gameImpls(GameType gameType) external view returns (IDisputeGame _impl);\n\n    /// @notice Creates a new DisputeGame proxy contract.\n    /// @param gameType The type of the DisputeGame - used to decide the proxy implementation.\n    /// @param rootClaim The root claim of the DisputeGame.\n    /// @param extraData Any extra data that should be provided to the created dispute game.\n    /// @return proxy The address of the created DisputeGame proxy.\n    function create(\n        GameType gameType,\n        Claim rootClaim,\n        bytes calldata extraData\n    ) external returns (IDisputeGame proxy);\n\n    /// @notice Sets the implementation contract for a specific `GameType`.\n    /// @dev May only be called by the `owner`.\n    /// @param gameType The type of the DisputeGame.\n    /// @param impl The implementation contract for the given `GameType`.\n    function setImplementation(GameType gameType, IDisputeGame impl) external;\n\n    /// @notice Returns a unique identifier for the given dispute game parameters.\n    /// @dev Hashes the concatenation of `gameType . rootClaim . extraData`\n    ///      without expanding memory.\n    /// @param gameType The type of the DisputeGame.\n    /// @param rootClaim The root claim of the DisputeGame.\n    /// @param extraData Any extra data that should be provided to the created dispute game.\n    /// @return _uuid The unique identifier for the given dispute game parameters.\n    function getGameUUID(\n        GameType gameType,\n        Claim rootClaim,\n        bytes memory extraData\n    ) external pure returns (Hash _uuid);\n}\n",
  "sourcePath": "@eth-optimism/contracts-bedrock/src/dispute/interfaces/IDisputeGameFactory.sol",
  "ast": {
    "absolutePath": "@eth-optimism/contracts-bedrock/src/dispute/interfaces/IDisputeGameFactory.sol",
    "exportedSymbols": {
      "BondAmount": [
        3500
      ],
      "Claim": [
        3496
      ],
      "ClaimHash": [
        3498
      ],
      "Clock": [
        3508
      ],
      "Duration": [
        3504
      ],
      "GameId": [
        3506
      ],
      "GameStatus": [
        3516
      ],
      "GameType": [
        3512
      ],
      "GameTypes": [
        3542
      ],
      "Hash": [
        3494
      ],
      "IDisputeGame": [
        2817
      ],
      "IDisputeGameFactory": [
        2927
      ],
      "LibClock": [
        3084
      ],
      "LibHashing": [
        3104
      ],
      "LibPosition": [
        3262
      ],
      "Position": [
        3510
      ],
      "Timestamp": [
        3502
      ]
    },
    "id": 2928,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2819,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:8"
      },
      {
        "absolutePath": "@eth-optimism/contracts-bedrock/src/libraries/DisputeTypes.sol",
        "file": "../../libraries/DisputeTypes.sol",
        "id": 2820,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2928,
        "sourceUnit": 3543,
        "src": "58:42:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@eth-optimism/contracts-bedrock/src/dispute/interfaces/IDisputeGame.sol",
        "file": "./IDisputeGame.sol",
        "id": 2822,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2928,
        "sourceUnit": 2818,
        "src": "102:50:8",
        "symbolAliases": [
          {
            "foreign": {
              "id": 2821,
              "name": "IDisputeGame",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2817,
              "src": "111:12:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IDisputeGameFactory",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2823,
          "nodeType": "StructuredDocumentation",
          "src": "154:92:8",
          "text": "@title IDisputeGameFactory\n @notice The interface for a DisputeGameFactory contract."
        },
        "fullyImplemented": false,
        "id": 2927,
        "linearizedBaseContracts": [
          2927
        ],
        "name": "IDisputeGameFactory",
        "nameLocation": "256:19:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 2824,
              "nodeType": "StructuredDocumentation",
              "src": "282:256:8",
              "text": "@notice Emitted when a new dispute game is created\n @param disputeProxy The address of the dispute game proxy\n @param gameType The type of the dispute game proxy's implementation\n @param rootClaim The root claim of the dispute game"
            },
            "eventSelector": "fad0599ff449d8d9685eadecca8cb9e00924c5fd8367c1c09469824939e1ffec",
            "id": 2834,
            "name": "DisputeGameCreated",
            "nameLocation": "549:18:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2826,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "disputeProxy",
                  "nameLocation": "593:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2834,
                  "src": "577:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2829,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "gameType",
                  "nameLocation": "632:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2834,
                  "src": "615:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_GameType_$3512",
                    "typeString": "GameType"
                  },
                  "typeName": {
                    "id": 2828,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2827,
                      "name": "GameType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3512,
                      "src": "615:8:8"
                    },
                    "referencedDeclaration": 3512,
                    "src": "615:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_GameType_$3512",
                      "typeString": "GameType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2832,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "rootClaim",
                  "nameLocation": "664:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2834,
                  "src": "650:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Claim_$3496",
                    "typeString": "Claim"
                  },
                  "typeName": {
                    "id": 2831,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2830,
                      "name": "Claim",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3496,
                      "src": "650:5:8"
                    },
                    "referencedDeclaration": 3496,
                    "src": "650:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Claim_$3496",
                      "typeString": "Claim"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "567:112:8"
            },
            "src": "543:137:8"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2835,
              "nodeType": "StructuredDocumentation",
              "src": "686:198:8",
              "text": "@notice Emitted when a new game implementation added to the factory\n @param impl The implementation contract for the given `GameType`.\n @param gameType The type of the DisputeGame."
            },
            "eventSelector": "623713f72f6e427a8044bb8b3bd6834357cf285decbaa21bcc73c1d0632c4d84",
            "id": 2842,
            "name": "ImplementationSet",
            "nameLocation": "895:17:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2837,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "impl",
                  "nameLocation": "929:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2842,
                  "src": "913:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "913:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2840,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "gameType",
                  "nameLocation": "952:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2842,
                  "src": "935:25:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_GameType_$3512",
                    "typeString": "GameType"
                  },
                  "typeName": {
                    "id": 2839,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2838,
                      "name": "GameType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3512,
                      "src": "935:8:8"
                    },
                    "referencedDeclaration": 3512,
                    "src": "935:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_GameType_$3512",
                      "typeString": "GameType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "912:49:8"
            },
            "src": "889:73:8"
          },
          {
            "documentation": {
              "id": 2843,
              "nodeType": "StructuredDocumentation",
              "src": "968:156:8",
              "text": "@notice The total number of dispute games created by this factory.\n @return _gameCount The total number of dispute games created by this factory."
            },
            "functionSelector": "4d1975b4",
            "id": 2848,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "gameCount",
            "nameLocation": "1138:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1147:2:8"
            },
            "returnParameters": {
              "id": 2847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2846,
                  "mutability": "mutable",
                  "name": "_gameCount",
                  "nameLocation": "1181:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2848,
                  "src": "1173:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1173:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1172:20:8"
            },
            "scope": 2927,
            "src": "1129:64:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2849,
              "nodeType": "StructuredDocumentation",
              "src": "1199:670:8",
              "text": "@notice `games` queries an internal mapping that maps the hash of\n         `gameType ++ rootClaim ++ extraData` to the deployed `DisputeGame` clone.\n @dev `++` equates to concatenation.\n @param gameType The type of the DisputeGame - used to decide the proxy implementation\n @param rootClaim The root claim of the DisputeGame.\n @param extraData Any extra data that should be provided to the created dispute game.\n @return _proxy The clone of the `DisputeGame` created with the given parameters.\n         Returns `address(0)` if nonexistent.\n @return _timestamp The timestamp of the creation of the dispute game."
            },
            "functionSelector": "c49d5271",
            "id": 2865,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "games",
            "nameLocation": "1883:5:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2852,
                  "mutability": "mutable",
                  "name": "gameType",
                  "nameLocation": "1907:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2865,
                  "src": "1898:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_GameType_$3512",
                    "typeString": "GameType"
                  },
                  "typeName": {
                    "id": 2851,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2850,
                      "name": "GameType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3512,
                      "src": "1898:8:8"
                    },
                    "referencedDeclaration": 3512,
                    "src": "1898:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_GameType_$3512",
                      "typeString": "GameType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2855,
                  "mutability": "mutable",
                  "name": "rootClaim",
                  "nameLocation": "1931:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2865,
                  "src": "1925:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Claim_$3496",
                    "typeString": "Claim"
                  },
                  "typeName": {
                    "id": 2854,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2853,
                      "name": "Claim",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3496,
                      "src": "1925:5:8"
                    },
                    "referencedDeclaration": 3496,
                    "src": "1925:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Claim_$3496",
                      "typeString": "Claim"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2857,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "1965:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2865,
                  "src": "1950:24:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2856,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1950:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1888:92:8"
            },
            "returnParameters": {
              "id": 2864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2861,
                  "mutability": "mutable",
                  "name": "_proxy",
                  "nameLocation": "2017:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2865,
                  "src": "2004:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDisputeGame_$2817",
                    "typeString": "contract IDisputeGame"
                  },
                  "typeName": {
                    "id": 2860,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2859,
                      "name": "IDisputeGame",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2817,
                      "src": "2004:12:8"
                    },
                    "referencedDeclaration": 2817,
                    "src": "2004:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDisputeGame_$2817",
                      "typeString": "contract IDisputeGame"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2863,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nameLocation": "2033:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2865,
                  "src": "2025:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2025:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2003:41:8"
            },
            "scope": 2927,
            "src": "1874:171:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2866,
              "nodeType": "StructuredDocumentation",
              "src": "2051:463:8",
              "text": "@notice `gameAtIndex` returns the dispute game contract address and its creation timestamp\n          at the given index. Each created dispute game increments the underlying index.\n @param _index The index of the dispute game.\n @return _proxy The clone of the `DisputeGame` created with the given parameters.\n         Returns `address(0)` if nonexistent.\n @return _timestamp The timestamp of the creation of the dispute game."
            },
            "functionSelector": "bb8aa1fc",
            "id": 2876,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "gameAtIndex",
            "nameLocation": "2528:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2868,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "2548:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2876,
                  "src": "2540:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2540:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2539:16:8"
            },
            "returnParameters": {
              "id": 2875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2872,
                  "mutability": "mutable",
                  "name": "_proxy",
                  "nameLocation": "2616:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2876,
                  "src": "2603:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDisputeGame_$2817",
                    "typeString": "contract IDisputeGame"
                  },
                  "typeName": {
                    "id": 2871,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2870,
                      "name": "IDisputeGame",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2817,
                      "src": "2603:12:8"
                    },
                    "referencedDeclaration": 2817,
                    "src": "2603:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDisputeGame_$2817",
                      "typeString": "contract IDisputeGame"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2874,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nameLocation": "2632:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2876,
                  "src": "2624:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2624:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2602:41:8"
            },
            "scope": 2927,
            "src": "2519:125:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2877,
              "nodeType": "StructuredDocumentation",
              "src": "2650:346:8",
              "text": "@notice `gameImpls` is a mapping that maps `GameType`s to their respective\n         `IDisputeGame` implementations.\n @param gameType The type of the dispute game.\n @return _impl The address of the implementation of the game type.\n         Will be cloned on creation of a new dispute game with the given `gameType`."
            },
            "functionSelector": "dfa162d3",
            "id": 2886,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "gameImpls",
            "nameLocation": "3010:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2881,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2880,
                  "mutability": "mutable",
                  "name": "gameType",
                  "nameLocation": "3029:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2886,
                  "src": "3020:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_GameType_$3512",
                    "typeString": "GameType"
                  },
                  "typeName": {
                    "id": 2879,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2878,
                      "name": "GameType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3512,
                      "src": "3020:8:8"
                    },
                    "referencedDeclaration": 3512,
                    "src": "3020:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_GameType_$3512",
                      "typeString": "GameType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3019:19:8"
            },
            "returnParameters": {
              "id": 2885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2884,
                  "mutability": "mutable",
                  "name": "_impl",
                  "nameLocation": "3075:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2886,
                  "src": "3062:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDisputeGame_$2817",
                    "typeString": "contract IDisputeGame"
                  },
                  "typeName": {
                    "id": 2883,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2882,
                      "name": "IDisputeGame",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2817,
                      "src": "3062:12:8"
                    },
                    "referencedDeclaration": 2817,
                    "src": "3062:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDisputeGame_$2817",
                      "typeString": "contract IDisputeGame"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3061:20:8"
            },
            "scope": 2927,
            "src": "3001:81:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2887,
              "nodeType": "StructuredDocumentation",
              "src": "3088:369:8",
              "text": "@notice Creates a new DisputeGame proxy contract.\n @param gameType The type of the DisputeGame - used to decide the proxy implementation.\n @param rootClaim The root claim of the DisputeGame.\n @param extraData Any extra data that should be provided to the created dispute game.\n @return proxy The address of the created DisputeGame proxy."
            },
            "functionSelector": "3142e55e",
            "id": 2901,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "create",
            "nameLocation": "3471:6:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2890,
                  "mutability": "mutable",
                  "name": "gameType",
                  "nameLocation": "3496:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2901,
                  "src": "3487:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_GameType_$3512",
                    "typeString": "GameType"
                  },
                  "typeName": {
                    "id": 2889,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2888,
                      "name": "GameType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3512,
                      "src": "3487:8:8"
                    },
                    "referencedDeclaration": 3512,
                    "src": "3487:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_GameType_$3512",
                      "typeString": "GameType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2893,
                  "mutability": "mutable",
                  "name": "rootClaim",
                  "nameLocation": "3520:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2901,
                  "src": "3514:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Claim_$3496",
                    "typeString": "Claim"
                  },
                  "typeName": {
                    "id": 2892,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2891,
                      "name": "Claim",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3496,
                      "src": "3514:5:8"
                    },
                    "referencedDeclaration": 3496,
                    "src": "3514:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Claim_$3496",
                      "typeString": "Claim"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2895,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "3554:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2901,
                  "src": "3539:24:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2894,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3539:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3477:92:8"
            },
            "returnParameters": {
              "id": 2900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2899,
                  "mutability": "mutable",
                  "name": "proxy",
                  "nameLocation": "3601:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2901,
                  "src": "3588:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDisputeGame_$2817",
                    "typeString": "contract IDisputeGame"
                  },
                  "typeName": {
                    "id": 2898,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2897,
                      "name": "IDisputeGame",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2817,
                      "src": "3588:12:8"
                    },
                    "referencedDeclaration": 2817,
                    "src": "3588:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDisputeGame_$2817",
                      "typeString": "contract IDisputeGame"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3587:20:8"
            },
            "scope": 2927,
            "src": "3462:146:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2902,
              "nodeType": "StructuredDocumentation",
              "src": "3614:246:8",
              "text": "@notice Sets the implementation contract for a specific `GameType`.\n @dev May only be called by the `owner`.\n @param gameType The type of the DisputeGame.\n @param impl The implementation contract for the given `GameType`."
            },
            "functionSelector": "45583b7a",
            "id": 2911,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setImplementation",
            "nameLocation": "3874:17:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2905,
                  "mutability": "mutable",
                  "name": "gameType",
                  "nameLocation": "3901:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2911,
                  "src": "3892:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_GameType_$3512",
                    "typeString": "GameType"
                  },
                  "typeName": {
                    "id": 2904,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2903,
                      "name": "GameType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3512,
                      "src": "3892:8:8"
                    },
                    "referencedDeclaration": 3512,
                    "src": "3892:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_GameType_$3512",
                      "typeString": "GameType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2908,
                  "mutability": "mutable",
                  "name": "impl",
                  "nameLocation": "3924:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2911,
                  "src": "3911:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDisputeGame_$2817",
                    "typeString": "contract IDisputeGame"
                  },
                  "typeName": {
                    "id": 2907,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2906,
                      "name": "IDisputeGame",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2817,
                      "src": "3911:12:8"
                    },
                    "referencedDeclaration": 2817,
                    "src": "3911:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDisputeGame_$2817",
                      "typeString": "contract IDisputeGame"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3891:38:8"
            },
            "returnParameters": {
              "id": 2910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3938:0:8"
            },
            "scope": 2927,
            "src": "3865:74:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2912,
              "nodeType": "StructuredDocumentation",
              "src": "3945:482:8",
              "text": "@notice Returns a unique identifier for the given dispute game parameters.\n @dev Hashes the concatenation of `gameType . rootClaim . extraData`\n      without expanding memory.\n @param gameType The type of the DisputeGame.\n @param rootClaim The root claim of the DisputeGame.\n @param extraData Any extra data that should be provided to the created dispute game.\n @return _uuid The unique identifier for the given dispute game parameters."
            },
            "functionSelector": "26daafbe",
            "id": 2926,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getGameUUID",
            "nameLocation": "4441:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2921,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2915,
                  "mutability": "mutable",
                  "name": "gameType",
                  "nameLocation": "4471:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2926,
                  "src": "4462:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_GameType_$3512",
                    "typeString": "GameType"
                  },
                  "typeName": {
                    "id": 2914,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2913,
                      "name": "GameType",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3512,
                      "src": "4462:8:8"
                    },
                    "referencedDeclaration": 3512,
                    "src": "4462:8:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_GameType_$3512",
                      "typeString": "GameType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2918,
                  "mutability": "mutable",
                  "name": "rootClaim",
                  "nameLocation": "4495:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2926,
                  "src": "4489:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Claim_$3496",
                    "typeString": "Claim"
                  },
                  "typeName": {
                    "id": 2917,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2916,
                      "name": "Claim",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3496,
                      "src": "4489:5:8"
                    },
                    "referencedDeclaration": 3496,
                    "src": "4489:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Claim_$3496",
                      "typeString": "Claim"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2920,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "4527:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2926,
                  "src": "4514:22:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2919,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4514:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4452:90:8"
            },
            "returnParameters": {
              "id": 2925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2924,
                  "mutability": "mutable",
                  "name": "_uuid",
                  "nameLocation": "4571:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 2926,
                  "src": "4566:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Hash_$3494",
                    "typeString": "Hash"
                  },
                  "typeName": {
                    "id": 2923,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2922,
                      "name": "Hash",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3494,
                      "src": "4566:4:8"
                    },
                    "referencedDeclaration": 3494,
                    "src": "4566:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Hash_$3494",
                      "typeString": "Hash"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4565:12:8"
            },
            "scope": 2927,
            "src": "4432:146:8",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2928,
        "src": "246:4334:8",
        "usedErrors": []
      }
    ],
    "src": "32:4549:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.14",
  "updatedAt": "2023-08-12T03:58:53.027Z",
  "devdoc": {
    "events": {
      "DisputeGameCreated(address,uint8,bytes32)": {
        "params": {
          "disputeProxy": "The address of the dispute game proxy",
          "gameType": "The type of the dispute game proxy's implementation",
          "rootClaim": "The root claim of the dispute game"
        }
      },
      "ImplementationSet(address,uint8)": {
        "params": {
          "gameType": "The type of the DisputeGame.",
          "impl": "The implementation contract for the given `GameType`."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "create(uint8,bytes32,bytes)": {
        "params": {
          "extraData": "Any extra data that should be provided to the created dispute game.",
          "gameType": "The type of the DisputeGame - used to decide the proxy implementation.",
          "rootClaim": "The root claim of the DisputeGame."
        },
        "returns": {
          "proxy": "The address of the created DisputeGame proxy."
        }
      },
      "gameAtIndex(uint256)": {
        "params": {
          "_index": "The index of the dispute game."
        },
        "returns": {
          "_proxy": "The clone of the `DisputeGame` created with the given parameters.         Returns `address(0)` if nonexistent.",
          "_timestamp": "The timestamp of the creation of the dispute game."
        }
      },
      "gameCount()": {
        "returns": {
          "_gameCount": "The total number of dispute games created by this factory."
        }
      },
      "gameImpls(uint8)": {
        "params": {
          "gameType": "The type of the dispute game."
        },
        "returns": {
          "_impl": "The address of the implementation of the game type.         Will be cloned on creation of a new dispute game with the given `gameType`."
        }
      },
      "games(uint8,bytes32,bytes)": {
        "details": "`++` equates to concatenation.",
        "params": {
          "extraData": "Any extra data that should be provided to the created dispute game.",
          "gameType": "The type of the DisputeGame - used to decide the proxy implementation",
          "rootClaim": "The root claim of the DisputeGame."
        },
        "returns": {
          "_proxy": "The clone of the `DisputeGame` created with the given parameters.         Returns `address(0)` if nonexistent.",
          "_timestamp": "The timestamp of the creation of the dispute game."
        }
      },
      "getGameUUID(uint8,bytes32,bytes)": {
        "details": "Hashes the concatenation of `gameType . rootClaim . extraData`      without expanding memory.",
        "params": {
          "extraData": "Any extra data that should be provided to the created dispute game.",
          "gameType": "The type of the DisputeGame.",
          "rootClaim": "The root claim of the DisputeGame."
        },
        "returns": {
          "_uuid": "The unique identifier for the given dispute game parameters."
        }
      },
      "setImplementation(uint8,address)": {
        "details": "May only be called by the `owner`.",
        "params": {
          "gameType": "The type of the DisputeGame.",
          "impl": "The implementation contract for the given `GameType`."
        }
      }
    },
    "title": "IDisputeGameFactory",
    "version": 1
  },
  "userdoc": {
    "events": {
      "DisputeGameCreated(address,uint8,bytes32)": {
        "notice": "Emitted when a new dispute game is created"
      },
      "ImplementationSet(address,uint8)": {
        "notice": "Emitted when a new game implementation added to the factory"
      }
    },
    "kind": "user",
    "methods": {
      "create(uint8,bytes32,bytes)": {
        "notice": "Creates a new DisputeGame proxy contract."
      },
      "gameAtIndex(uint256)": {
        "notice": "`gameAtIndex` returns the dispute game contract address and its creation timestamp          at the given index. Each created dispute game increments the underlying index."
      },
      "gameCount()": {
        "notice": "The total number of dispute games created by this factory."
      },
      "gameImpls(uint8)": {
        "notice": "`gameImpls` is a mapping that maps `GameType`s to their respective         `IDisputeGame` implementations."
      },
      "games(uint8,bytes32,bytes)": {
        "notice": "`games` queries an internal mapping that maps the hash of         `gameType ++ rootClaim ++ extraData` to the deployed `DisputeGame` clone."
      },
      "getGameUUID(uint8,bytes32,bytes)": {
        "notice": "Returns a unique identifier for the given dispute game parameters."
      },
      "setImplementation(uint8,address)": {
        "notice": "Sets the implementation contract for a specific `GameType`."
      }
    },
    "notice": "The interface for a DisputeGameFactory contract.",
    "version": 1
  }
}